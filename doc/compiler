token按其作用可以分为不同的类型，比较常见的类型注释、关键字、标识符、字面量、运算符、分隔符等。

1.空白字符
大部分主流编程语言都是使用特定的token来界定代码块（Python语言是个例外，使用缩进界定代码块），比如C、C++或者Java语言使用花括号界定代码块，Bash脚本则是使用关键字界定代码块。在这些语言里，空白字符（White Spaces）没什么特别含义，仅仅起到分隔其他token以及格式化代码的作用。编译器除了需要使用换行符计算行号以外，会完全忽略空白字符。这样的语言叫作自由格式（Free-form，或者Free-format）语言。
Lua也属于自由格式语言，使用关键字界定代码块。
Lua编译器会忽略换行符（\n）、回车符（\r）、横向制表符（\t）、纵向制表符（\v）、换 […]

2.注释
和空白字符类似，注释也只是给人类看的，编译器可以完全忽略注释。
Lua支持长短两种形式的注释：
短注释以两个连续的减号开始，到行尾结束；
长注释以两个连续的减号和左长方括号开始，可以跨越多行，直到右长方括号结束。
所谓长方括号，是指两个方括号和中间任意个等号所构成的序列。长方括号也分左右两种，必须成对使用，中间的等号数量必须相同。我们在后文介绍字符串字面量时会看到，长注释其实就是两个减号紧跟一个长字符串字面量。
下面给出一些注释的例子。

print("hello") -- short comment
print("world") --> another short comment
print() --[[ long comment ]]
--[===[
    another
    long comment
]===]

3.标识符
标识符（Identifier）主要用来命名变量。
Lua标识符以字母或下划线开头，后跟数字、字母或者下划线的任意组合。
Lua是大小写敏感语言，因此var、Var和VAR是三个不同的标识符。
按照惯例，应该避免在程序中使用以下划线开头，后跟一个或多个大写字母的标识符（比如_ENV）。

4.关键字
关键字（Keyword）具有特殊含义，由编程语言保留，不能当作标识符使用。
下面是Lua语言所保留的关键字（共22个）。
and       break     do        else      elseif    end
false     for       function  goto      if        in
local     nil       not       or        repeat    return
then      true      until     while

5.数字字面量
Lua数字字面量写法非常灵活。最简单的是十进制整数写法，比如3、314。
当使用小数写法时，整数部分和小数部分都可以省略，比如3.、3.14、.14。
还可以加上指数部分写成科学计数法，比如0.314E1、314e-2。Lua十进制数字字面量的词法规则可以用图14-3表示。

十六进制写法以0x或者0X开头，比如0xff、0X3A、0x3.243F6A8885A。
十六进制也可以使用科学计数法，但是指数部分用字母p（或者P）表示，只能使用十进制数字，并且表示的是2的多少次方，比如0xA23p-4。
Lua十六进制数字字面量的词法规则可以用图14-4表示。

如果数字字面量不包含小数和指数部分，也没有超出Lua整数的表示范围，则会被Lua解释成整数值，否则会被Lua解释成浮点数值。

6.字符串字面量
Lua字符串字面量分为长字符串和短字符串两种。
短字符串使用单引号或者双引号分隔，里面可以包含转义序列。
Lua字符串字面量所支持的大部分转义序列在其他编程语言里也很常见，这里就不一一解释了。
表14-1列出了所有转义序列、转义之后的ASCII码及其简要的说明。

Lua短字符串字面量不能跨行（可以使用转义序列插入回车或者换行符），唯一的例外是\z转义序列，该转义序列会删除自己，以及紧随其后的空白字符。
下面是一个例子：
print("hello, \z
        world!") --> hello, world!

如果需要在代码中输入跨越多行的字符串（比如JSON、HTML等），Lua提供了长字符串字面量。
长字符串字面量使用长方括号分隔，不支持转义序列。
长字符串内出现的换行符序列（\r\n、\n\r、\n、\r）会被Lua统一替换为换行符\n，另外，紧跟在左长方括号后面的第一个换行符会被Lua删掉。
下面是《Lua 5.3Reference Manual》里的一个例子，里面的所有字符串字面量都表示相同的字符串。
a = 'alo\n123"'
a = "alo\n123\""
a = '\97lo\10\04923"'
a = [[alo
123"]]
a = [==[
alo
123"]==]

7.运算符和分隔符
其他类型的token包括运算符和分隔符等，下面列出这些token。
+     -     *     /     %     ^     #
&     ~     |     <<    >>    //
==    ~=    <=    >=    <     >     =
(     )     {     }     [     ]     ::
;     :     ,     .     ..    ...

Lua一共定义了25种运算符。
这些运算符按照优先级可以分为12个等级，从低到高排列如下（乘方运算符的优先级最高，逻辑或运算符的优先级最低）。
or
and
<     >     <=    >=    ~=    ==
|
~
&
<<    >>
..
+     -
*     /     //    %
unary operators (not   #     -     ~)
^